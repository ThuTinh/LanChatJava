
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Logic.Message;
import Logic.SocketClient;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Thu Tinh
 */
public class GroupChatFrame extends javax.swing.JFrame {

    SocketClient socket;
    Thread thread;
    public String userName;
    public String nameGroup;
    public String choosingItem = "";
    public String lastUser = "";
    public DefaultListModel onlineModel, memberModel;

    /**
     * Creates new form GroupChatFrame
     */
    public GroupChatFrame(SocketClient socketClient, String user, String name, MainFrame mainFrame) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconchat.png")));
        txtMessage.requestFocus();
        txtMessageInfo.setEditable(false);
        this.socket = socketClient;
        this.userName = user;
        this.nameGroup = name;
        super.setResizable(false);
        for (int i = 0; i < mainFrame.model.getSize(); i++) {

            onlineModel.addElement(mainFrame.model.getElementAt(i));
            //JOptionPane.showMessageDialog(null,"Them user"+mainFrame.model.getElementAt(i));
        }
        this.setTitle(nameGroup);
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                setVisible(false);
            }
        });

    }

    public JButton getBtnAdd() {
        return btnAdd;
    }

    public JList getLsMember() {
        return lsMember;
    }

    public JList getLsOnline() {
        return lsOnline;
    }

    public JTextField getTxtMessage() {
        return txtMessage;
    }

    public JTextPane getTxtMessageInfo() {
        return txtMessageInfo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessageInfo = new javax.swing.JTextPane();
        txtMessage = new javax.swing.JTextField();
        btnhistory = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsOnline = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lsMember = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        btnQuit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(214, 90, 49));

        txtMessageInfo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jScrollPane1.setViewportView(txtMessageInfo);

        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMessageKeyPressed(evt);
            }
        });

        btnhistory.setText("History");
        btnhistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnhistoryMouseClicked(evt);
            }
        });
        btnhistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhistoryActionPerformed(evt);
            }
        });

        jLabel1.setText("Online");

        lsOnline.setModel( onlineModel = new DefaultListModel());
        lsOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lsOnlineMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lsOnline);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lsMember.setModel(memberModel = new DefaultListModel());
        jScrollPane3.setViewportView(lsMember);

        jLabel2.setText("Members");

        btnQuit.setText("Quit");
        btnQuit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQuitMouseClicked(evt);
            }
        });
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnQuit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnhistory)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnhistory)
                    .addComponent(btnQuit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (choosingItem != "") {
            socket.send(new Message("AddMemberGroup", userName, choosingItem, nameGroup));
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void lsOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lsOnlineMouseClicked
        // TODO add your handling code here:
        lsOnline = (JList) evt.getSource();
        if (evt.getClickCount() == 1) {
            int index = lsOnline.locationToIndex(evt.getPoint());
            choosingItem = lsOnline.getSelectedValue().toString();
        }
        if (evt.getClickCount() == 2) {
            int index = lsOnline.locationToIndex(evt.getPoint());
            choosingItem = lsOnline.getSelectedValue().toString();
            socket.send(new Message("AddMemberGroup", userName, choosingItem, nameGroup));

        }
    }//GEN-LAST:event_lsOnlineMouseClicked

    private void txtMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtMessage.getText().isEmpty()) {
                String msg = txtMessage.getText();
                StyledDocument doc = txtMessageInfo.getStyledDocument();
                SimpleAttributeSet right = new SimpleAttributeSet();
                StyleConstants.setAlignment(right, StyleConstants.ALIGN_RIGHT);
                Style style = txtMessageInfo.addStyle(null, null);
                StyleConstants.setForeground(style, Color.blue);
                try {
                    String message = msg + "\n";
                    int lenght = doc.getLength();
                    doc.insertString(lenght, message, style);
                    doc.setParagraphAttributes(lenght + 1, 1, right, false);
                    socket.send(new Message("GroupChat", userName, msg, nameGroup));
                    txtMessage.setText("");
                } catch (Exception e) {

                }
            }
        }
    }//GEN-LAST:event_txtMessageKeyPressed

    private void btnQuitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuitMouseClicked
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "Do you want to leave group", "Thông tin", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            socket.send(new Message("groupchat-leave", userName, "true", nameGroup));
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnQuitMouseClicked

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        // TODO add your handling code here:
//        socket.send(new Message("groupchat-leave", userName, nameGroup, "SERVER"));
//        this.hide();
    }//GEN-LAST:event_btnQuitActionPerformed

    private void btnhistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhistoryActionPerformed
        // TODO add your handling code here:
        //   socket.send(new Message("GroupChatHistory", userName, nameGroup, "Server"));

    }//GEN-LAST:event_btnhistoryActionPerformed

    private void btnhistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnhistoryMouseClicked
        // TODO add your handling code here:
        try {
            socket.send(new Message("GroupChatHistory", userName, nameGroup, "Server"));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Chạy chưa dc nè" + e.toString());
        }

    }//GEN-LAST:event_btnhistoryMouseClicked

    public void AddMember(String name) {
        this.memberModel.addElement(name);
    }

    public void MoveUserFromUserToMemberModel(String name) {
        for (int i = 0; i < onlineModel.getSize(); i++) {
            if (onlineModel.getElementAt(i).equals(name)) {
                onlineModel.removeElementAt(i);
                AddMember(name);
                break;
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnhistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lsMember;
    private javax.swing.JList lsOnline;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextPane txtMessageInfo;
    // End of variables declaration//GEN-END:variables

    public void MoveUserFromUserToAddModel(String name) {
        for (int i = 0; i < memberModel.getSize(); i++) {
            if (memberModel.getElementAt(i).equals(name)) {
                memberModel.removeElementAt(i);
                onlineModel.addElement(name);
                break;
            }
        }
    }
}
