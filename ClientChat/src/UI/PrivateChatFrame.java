/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Logic.Message;
import Logic.SocketClient;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Thu Tinh
 */
public class PrivateChatFrame extends javax.swing.JFrame {

    /**
     * Creates new form PrivateChatFrame
     */
    public SocketClient client;
    public String target ;
    Thread clientThread;
    public  String user;
    public  File file ;
    
    public PrivateChatFrame(SocketClient socketClient, String target , String user) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconchat.png")));
        txtMessage.requestFocus();
        txtMessageInfo.setEnabled(false);
        this.client = socketClient;
        super.setResizable(false);
        this.user = user;
        this.target = target;
        this.setTitle(target);
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                setVisible(false);
            }
        });    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessageInfo = new javax.swing.JTextPane();
        txtMessage = new javax.swing.JTextField();
        btnHistory = new javax.swing.JButton();
        txttenfile = new javax.swing.JTextField();
        btnLink = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(214, 90, 49));

        txtMessageInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(txtMessageInfo);

        txtMessage.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMessageKeyReleased(evt);
            }
        });

        btnHistory.setLabel("History");
        btnHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHistoryMouseClicked(evt);
            }
        });
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        txttenfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttenfileActionPerformed(evt);
            }
        });

        btnLink.setIcon(new javax.swing.ImageIcon("D:\\HK6\\LapTrinhJava\\DoAn\\LanChat\\ClientChat\\icons8-link-20.png")); // NOI18N
        btnLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinkActionPerformed(evt);
            }
        });

        btnUpload.setIcon(new javax.swing.ImageIcon("D:\\HK6\\LapTrinhJava\\DoAn\\LanChat\\ClientChat\\icons8-upload-20.png")); // NOI18N
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txttenfile, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLink, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHistory))
                    .addComponent(txtMessage))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txttenfile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHistory)))
                    .addComponent(btnLink, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnHistory.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistoryMouseClicked
        // TODO add your handling code here:

        client.send(new Message("showHistory", user,target,"Server"));
        
    }//GEN-LAST:event_btnHistoryMouseClicked

    private void txtMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
             if(!txtMessage.getText().isEmpty())
            {
                String msg = txtMessage.getText();
                StyledDocument doc = txtMessageInfo.getStyledDocument();
                SimpleAttributeSet right = new SimpleAttributeSet();
                StyleConstants.setAlignment(right, StyleConstants.ALIGN_RIGHT);
                Style style = txtMessageInfo.addStyle(null,null);
                StyleConstants.setForeground(style, Color.red);
                try {
                    String message = msg+"\n";
                    int lenght = doc.getLength();
                    doc.insertString(lenght, message, style);
                    doc.setParagraphAttributes(lenght+1, 1, right, false);
                    client.send(new Message("privatechat", user,  msg , target));
                    txtMessage.setText("");
                } catch (Exception e) {
                   
                }  
            }
//            if(!txtMessage.getText().isEmpty())
//            {
//                String msg = txtMessage.getText();
//                StyledDocument doc = txtMessageInfo.getStyledDocument();
//                SimpleAttributeSet right = new SimpleAttributeSet();
//                StyleConstants.setAlignment(right, StyleConstants.ALIGN_RIGHT);
//                Style style = txtMessageInfo.addStyle(null, null);
//                StyleConstants.setForeground(style, Color.MAGENTA);
//                String message = msg +"\n";
//                int length = doc.getLength();
//                try {
//                    doc.insertString(length, message, style);
//                    doc.setParagraphAttributes(length+1, 1, right, false);
//                    txtMessage.setText("");
//                    client.send(new Message("privatechat", user,  msg , target));
//
//                } catch (BadLocationException ex) {
//                    Logger.getLogger(PrivateChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//                    JOptionPane.showMessageDialog(rootPane, "Loi: "+ ex.toString());
//                }
//                
//
//            }
        }
    }//GEN-LAST:event_txtMessageKeyReleased

    private void txttenfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttenfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttenfileActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void btnLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinkActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showDialog(this, "Select file");
        file = fileChooser.getSelectedFile();
        txttenfile.setText(file.getName());
    }//GEN-LAST:event_btnLinkActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        long size = file.length();
        if(size<120*1024*1024)
        {
            client.send(new Message("UploadReq", user, file.getName(), target));
        }
        else
        {
             StyledDocument doc = this.getTxtMessageInfo().getStyledDocument();
            SimpleAttributeSet left = new SimpleAttributeSet();
            StyleConstants.setAlignment(left, StyleConstants.ALIGN_CENTER);
            Style style = this.getTxtMessageInfo().addStyle(null, null);
            StyleConstants.setForeground(style, Color.MAGENTA);
            String message = "File quá lớn!" + "\n";
            try{
                int length = doc.getLength();
                doc.insertString(doc.getLength(), message, style);
                doc.setParagraphAttributes(length+1, 1, left, false);
            }
            catch(Exception e) { 
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHistoryActionPerformed

    /**to
     * @param args the command line arguments
     */
public JTextField getTxtMessage()
{
    return txtMessage;
}
public  JTextPane getTxtMessageInfo()
{
    return txtMessageInfo;
}
public  void  setTxtMessage( JTextField a)
{
    txtMessage = a;
}

public JTextField gettxtFileName ()
{
    return this.txttenfile;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnLink;
    private javax.swing.JButton btnUpload;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextPane txtMessageInfo;
    private javax.swing.JTextField txttenfile;
    // End of variables declaration//GEN-END:variables
}
